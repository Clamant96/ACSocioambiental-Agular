{"ast":null,"code":"import { Categoria } from 'src/app/model/Categoria';\nimport { environment } from 'src/environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/categoria.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/alertas.service\";\nimport * as i4 from \"@angular/forms\";\nexport let CategoriaEditComponent = /*#__PURE__*/(() => {\n  class CategoriaEditComponent {\n    /* INJETA AS DEPENDENCIAS VINDO DO TemaService TRAZENDO OS METODOS CRIADOS E AS ROTAS DO OBJETO Router */\n    constructor(categoriaService, router, /* RESPOSAVEL POR ACESSAR A URL E CAPITURAR O PARAMETRO QUE ESTA SENDO TRABALHADO NO MOMENTO */\n    route, alertas) {\n      this.categoriaService = categoriaService;\n      this.router = router;\n      this.route = route;\n      this.alertas = alertas;\n      /* INSTANCIA UM OBJETO TEMA, UM VEZ QUE ESTAMOS ESPERANDO EDITAR UM DADO DE TEMA */\n      this.categoria = new Categoria();\n    }\n    /* SEMPRE QUE O COMPONENTE E CHAMADO, E EXECUTADO TUDO QUE ESTA AQUI DENTRO */\n    ngOnInit() {\n      /* REDIRECIONA O USUARIO PARA A TELA DE LOGIN, SEMPRE QUE O TOKEN NAO FOR IDENTIFICADO NA SESSAO */\n      if (environment.token == '') {\n        this.router.navigate(['/login']);\n      }\n      /*if(localStorage.getItem('token') == null) {\r\n        this.router.navigate(['/login']);\r\n            }*/\n      /* CAPITURA O PARAMENTRO DA URL E INSERE DETRO DO ATRIBUTO */\n      let id = this.route.snapshot.params['id'];\n      /* INSERE O VALOR COLETADO DA URL DENTRO DO METODO findByIdTema(id), QUE POR SUA VEZ RECEBE COMO PAREMTRO UM ID, DESSSA FORMA TRAZENDO OS DADOS DAQUELE ID EM ESPECIFICO */\n      this.findByIdTema(id);\n    }\n    /* CRIA UM METODO QUE RECEBE COMO PARAMETRO UM ID VINDO DA URL */\n    /* ACESSA O TemaService PARA TER ACESSO AO METODOS DE ACESSO HTTP CRIADOS */\n    /* INFORMA O ID RECEBIDO DENTRO DO METODO DO SERVICE */\n    /* CONVERTE ESSE DADO E O INSERE DENTRO DO OBJETO TEMA CRIADO */\n    /* DESSA FORMA CONSEGUIMOS TER ACESSO AOS DADOS DENTRO DE NOSSO HTML */\n    findByIdTema(id) {\n      this.categoriaService.getByIdCategoria(id).subscribe(resp => {\n        this.categoria = resp;\n      });\n    }\n    /* METODO CHAMADO POR MEIO DE CLICK, ONDE TEM COMO FUNCAO, CHAMAR O METODO CRIADO DENTRO DE TemaCervice RECEBER COMO PAREMETRO O OBJETO ATUALIZADO DO USAURIO */\n    /* CONVERTE ESSE DADO E ARMAZENA SEU VALOR DENTRO DA TABELA NOVAMENTE PARA QUE POSSAMOS APRESENTALA AO USUARIO */\n    /* APOS ISSO RETORNAMOS AUTOMATICAMENTE A PAGINA DE TEMAS, COM OS DADOS JA ATUALIZADOS */\n    atualizar() {\n      this.categoriaService.putCategoria(this.categoria).subscribe(resp => {\n        this.categoria = resp;\n        this.alertas.showAlertSuccess('Tema atualizado com sucesso!');\n        this.router.navigate(['/categoria']);\n      });\n    }\n  }\n  CategoriaEditComponent.ɵfac = function CategoriaEditComponent_Factory(t) {\n    return new (t || CategoriaEditComponent)(i0.ɵɵdirectiveInject(i1.CategoriaService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AlertasService));\n  };\n  CategoriaEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoriaEditComponent,\n    selectors: [[\"app-categoria-edit\"]],\n    decls: 20,\n    vars: 2,\n    consts: [[1, \"container\", \"mt-5\", \"mb-5\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"text-center\", \"text-secondary\"], [1, \"row\", \"d-flex\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"for\", \"descricao\"], [\"type\", \"text\", \"id\", \"nome\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"descricao\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"d-flex\", \"justify-content-center\"], [\"routerLink\", \"/categoria\", 1, \"btn\", \"btn-danger\", \"mr-4\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n    template: function CategoriaEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n        i0.ɵɵtext(4, \"Atualizar Categoria\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Titulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function CategoriaEditComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.categoria.nome = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Descri\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CategoriaEditComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.categoria.descricao = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 10)(16, \"button\", 11);\n        i0.ɵɵtext(17, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function CategoriaEditComponent_Template_button_click_18_listener() {\n          return ctx.atualizar();\n        });\n        i0.ɵɵtext(19, \"Atualizar\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.categoria.nome);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.categoria.descricao);\n      }\n    },\n    dependencies: [i2.RouterLink, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel]\n  });\n  return CategoriaEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}